<?php
// A few keywords. Obviously not valid syntax.
class Something extends SomethingElse implements Whatever {}
abstract public private protected function whatever() {}
const array();
foreach ($var as $var) { exit; }
if ($a and $b or $c xor $d) { die; } elseif( $var ) { } else {}
goto a;

class Something extends SomethingElse implements Whatever {}
abstract public private protected function whatever() {}
const array();
foreach ($var as $var) { exit; }
if ($a and $b or $c xor $d) { die; } elseif( $var ) { } else {}
goto a;
$b = function (Array $a) {};
const PRIVATE;
HttpStatus::CONTINUE;
$c = function ($f) {
    yield $f;
    yield from fun();
};
class X extends Y {
    public function m() {
        parent::m();
    }
    public function n() {
        self::n();
    }
}
fn ($x) => $x;
$r = match ($x) {
    1 => 1,
    2 => 2,
    default, => 3,
};

class Reading {
    public readonly int $var;
}

enum ENUM: string
{
    case HEARTS;
}

__HALT_COMPILER(); // An exception due to phar support.
function
